version: '3.2'

services:

  zookeeper:
    build: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'

  kafka-1:
    build: kafka
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: BROKER://:9092, LOCALHOST://:9081
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: BROKER:PLAINTEXT, LOCALHOST:PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: BROKER://kafka-1:9092, LOCALHOST://localhost:9081
      KAFKA_BROKER_ID: 1
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "false"
    ports:
      - 9081:9081
    depends_on:
      - zookeeper

  kafka-2:
    build: kafka
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: BROKER://:9092, LOCALHOST://:9082
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: BROKER:PLAINTEXT, LOCALHOST:PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: BROKER://kafka-2:9092, LOCALHOST://localhost:9082
      KAFKA_BROKER_ID: 2
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "false"
    ports:
      - 9092:9082
      - 9082:9082
    networks:
      default:
        aliases:
          - kafka
    depends_on:
      - zookeeper

  kafka-3:
    build: kafka
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: BROKER://:9092, LOCALHOST://:9083
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: BROKER:PLAINTEXT, LOCALHOST:PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: BROKER://kafka-3:9092, LOCALHOST://localhost:9083
      KAFKA_BROKER_ID: 3
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "false"
    ports:
      - 9083:9083
    depends_on:
      - zookeeper

  setup:
    image: juplo/toolbox
    command: >
      bash -c "
        kafka-topics --bootstrap-server kafka:9092 --delete --if-exists --topic test
        kafka-topics --bootstrap-server kafka:9092 --create --topic test --partitions 2 --replication-factor 3 --config min.insync.replicas=2
        kafka-topics --bootstrap-server kafka:9092 --describe --topic test
      "
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3

  cli:
    image: juplo/toolbox
    command: sleep infinity
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3

  kafka-lag-exporter:
    image: seglo/kafka-lag-exporter:0.8.2
    volumes:
      - ./kafka-lag-exporter.conf:/opt/docker/conf/application.conf:ro
    ports:
      - 8000:8000

  kafka-exporter:
    image: danielqsj/kafka-exporter:v1.6.0
    command: --kafka.server kafka:9092
    ports:
      - 9308:9308

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana:/var/lib/grafana

  producer:
    image: juplo/simple-producer:1.0-SNAPSHOT
    command: kafka:9092 test producer

  consumer:
    image: juplo/simple-consumer:1.0-SNAPSHOT
    command: kafka:9092 test my-group consumer

volumes:

  grafana:
